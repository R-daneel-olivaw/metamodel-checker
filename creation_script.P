% import append/3 from basics.
% import ith/3 from basics.

create_environment(Name, Context_var_list, Component_list, New_environment):-
	New_environment = [Name,Context_var_list,Component_list|[]].

create_component(Name, Context_var_list, New_component):-
	New_component=[Name,Context_var_list|[]].

add_component_to_environment(Environment, Component, Updated_environment):-
	ith(3,Environment,Environment_Component_list),
	append(Environment_Component_list, [Component], New_Environment_Component_list),
	replace(Environment,2,New_Environment_Component_list,Updated_environment_1),
	add_conponent_context_var(Updated_environment_1,Component,Updated_environment).
	
add_conponent_context_var(Environment,Component,Updated_environment):-
	ith(2,Environment,Environment_Context_list),
	write('env context - '),write(Environment_Context_list),nl,
	ith(2,Component,Component_Context_list),
	write('component context - '),write(Component_Context_list),nl,
	append(Environment_Context_list, Component_Context_list, New_Environment_Context_list),
	replace(Environment,1,New_Environment_Context_list,Updated_environment).

% replace(+List,+Index,+Value,-NewList).
% ?- L=[a,b,c,d], replace(L,1,z,L2).
% L2 = [a,z,c,d]
replace([_|T], 0, X, [X|T]).
replace([H|T], I, X, [H|R]):- I > -1, NI is I-1, replace(T, NI, X, R), !.
replace(L, _, _, L).


test_1():-
	create_environment(test_env,[],[],Env),
	write('test start'),nl,
	write(Env),nl,
	
	create_component(test_component_1,[[testVar1,50],[testVar2,90]],Comp1),
	write(Comp1),nl,
	
	add_component_to_environment(Env,Comp1,Env1),
	write(Env1),nl,
	
	create_component(test_component_2,[[testvar3,10]],Comp2),
	write(Comp2),nl,
	
	add_component_to_environment(Env1,Comp2,Env2),
	write(Env2),nl,
	
	write('test end').
	