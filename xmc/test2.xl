{*
send_event(1):-
	simulate_event_environment(users_phone,locationEvent,[locationEvent,[[latitude,1.0],[longitude,1.0]]]).

send_incoming_call_event(2):-
	simulate_event_environment(phone_network,incomingCallEvent,[incomingCallEvent,[[callerName,akshat],[callingNumber,a99]]]).

trigger_component_event_response(users_phone,locationEvent,Event_data):-
	% write('users_phone reacting to location event'),nl,
	faltten_to_key_value_pairs(Event_data,[],Flat_kv_pairs),
	
	get_value_for_key(latitude,Flat_kv_pairs,Latitude_value),
	get_value_for_key(longitude,Flat_kv_pairs,Longitude_value),	
	% write('Latitude - '),write(Latitude_value),nl,
	% write('Longitude - '),write(Longitude_value),nl,
	
	distance(Latitude_value,Longitude_value,5,5,Distance),
	% write('Distance calculated - '),write(Distance),nl,
	change_context_variable_value(distanceToWorkContextElement,Distance),
	assert(event_receive_notification(locationEvent)).
	
trigger_component_event_response(calendar_application,meetingStartedEvent,Event_data):-
	write('calendar_application reacting to meeting started event'),nl,
	change_context_variable_value(meetingInProgressContextElement,1).

% INCOMING CALL EVENT START
trigger_component_event_response(users_phone,incomingCallEvent,Event_data):-
	% Meeting has started
	context_variable(_,[meetingInProgressContextElement,1]),
	% The user is at work
	context_variable(_,[distanceToWorkContextElement,0.0]),
	
	faltten_to_key_value_pairs(Event_data,[],Flat_kv_pairs),
	get_value_for_key(callerName,Flat_kv_pairs,Caller_name),
	
	% Caller is in the preferred list
	member(Caller_name,[akshat,anugrah]),
	
	change_context_variable_value(inBusinessMeetingContextElement,1),
	
	write('users_phone reacting to incoming call event'),nl,
	write('BusinessMeetingPreferredCallerProfile - LET IT THROUGH'),nl.
	
trigger_component_event_response(users_phone,incomingCallEvent,Event_data):-
	% Meeting has started
	context_variable(_,[meetingInProgressContextElement,1]),
	% The user is at work
	context_variable(_,[distanceToWorkContextElement,0.0]),

	change_context_variable_value(inBusinessMeetingContextElement,1),
	
	write('users_phone reacting to incoming call event'),nl,
	write('BusinessMeetingProfile - BLOCK CALL'),nl.
	
trigger_component_event_response(users_phone,incomingCallEvent,Event_data):-

	% write('users_phone reacting to incoming call event'),nl,
	% write('NotInMeetingProfile - NORMAL CALL'),nl,
	assert(event_receive_notification(incomingCallEvent)).
% INCOMING CALL EVENT END
	
trigger_component_event_response(Component_name,Event_id,Event_data).

receive_event(1,Status):-
	event_receive_notification(locationEvent),
	retract(event_receive_notification(locationEvent)),
	Status=1.

chk_receive_incoming_call_event(2,1):-
	event_receive_notification(incomingCallEvent),
	retract(event_receive_notification(incomingCallEvent)).

receive_event(_,0).
*}

send_incoming_call_event_xl ::=
{
	send_incoming_call_event(2);
	action(event_sent);
	send_incoming_call_event_xl
}.

chk_receive_incoming_call_event_xl ::=
{
	chk_receive_incoming_call_event(2,Status);
	if(Status == 1)
	then
	{
		action(incoming_call)
	};
	chk_receive_incoming_call_event_xl
}.

incoming_call ::=
{
	send_incoming_call_event_xl
	; chk_receive_incoming_call_event_xl
}.

drop_call_event += <event_sent>lost_call \/ <->drop_call_event.
lost_call += <event_sent>tt \/ <-incoming_call>lost_call.